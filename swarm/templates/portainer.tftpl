version: '3.3'

services:
  dir_init:
    image: alpine:latest
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 5
        window: 5s
    volumes:
      - /opt/redswarm:/opt/redswarm
    command: sh -c "mkdir -p /opt/redswarm/portainer"

  agent:
    image: ${portainer_agent_image_name}
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/images/volumes:/var/lib/docker/volumes
    networks:
      - agent-network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

  portainer:
    image: ${portainer_image_name}
    command: -H tcp://tasks.agent:9001 --tlsskipverify --admin-password '${replace(portainer_admin_password_hash, "$", "$$")}'
    volumes:
      - "/opt/redswarm/portainer:/data"
    networks:
      - agent-network
      - public
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.docker.network=public
        - traefik.constraint-label=public
        - traefik.http.routers.portainer-https.rule=Host(`${portainer_ui_domain}`)
        - traefik.http.routers.portainer-https.entrypoints=https
        - traefik.http.routers.portainer-https.tls=true
        - traefik.http.routers.portainer-https.tls.certresolver=le
        - traefik.http.services.portainer.loadbalancer.server.port=9443
        - traefik.http.services.portainer.loadbalancer.server.scheme=https

networks:
  agent-network:
  public:
    external: true
